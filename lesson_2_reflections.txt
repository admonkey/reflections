1)  What happens when you initialize a repository? Why do you need to do it?
creates a hidden directory for version metadata.

2)  How is the staging area different from the working directory and the repository? What value do you think it offers?
The staging area is between the two. It allows you to add while working.......?

3)  How can you use the staging area to make sure you have one commit per logical change?
By progressively adding files to the staging area until it's complete, and then committing changes.

4)  What are some situations when branches would be helpful in keeping your history organized? How would branches help?
When creating different versions... 

5)  How do the diagrams help you visualize the branch structure?
graphically.

6)  What is the result of merging two branches together? Why do we represent it in the diagram the way we do?
So that you can easily trace your steps in development.

7)  What are the pros and cons of Git’s automatic merging vs. always doing merges manually?
It is certainly helpful by doing some of the work up front for you, but most of the power is in the mundane additions automatically integrated with a bonus feature to point out conflicts - even if you have to search for a while to find the root conflict and resolution.